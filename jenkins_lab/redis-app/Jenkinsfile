pipeline {
    agent any
    stages{
        stage('Docker image build'){
            steps{
                sh 'docker build -t devops/app .'
            }
        }
        stage('Up containers - redis and app'){
            steps{
                sh 'docker-compose up --build -d'
                sleep (15)
            }
        }
        stage('SonarQube verification'){
            steps{
                script{
                    scannerHome = tool 'sonar-scanner';
                }
                withSonarQubeEnv('sonar-server'){
                    sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=redis-app -Dsonar.sources=. -Dsonar.host.url=${env.SONAR_HOST_URL} -Dsonar.login=${env.SONAR_AUTH_TOKEN}"
                }
            }
        }
        stage('QualityGate validation'){
            steps{
                sleep (20)
                waitForQualityGate abortPipeline: true
            }
        }
        stage('application test'){
            steps{
                sh 'chmod +x test-app.sh'
                sh './test-app.sh'
            }            
        }
        stage('Shutdown test containers'){
            steps{
                sh 'docker-compose down'
            }            
        }
        stage('Upload docker image'){
            steps{
                script{
                    withCredentials([usernamePassword(credentialsId: 'nexus-user', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]){
                        sh 'docker login -u $USERNAME -p $PASSWORD ${NEXUS_URL}'
                        sh 'docker tag devops/app:latest ${NEXUS_URL}/devops/app'
                        sh 'docker push ${NEXUS_URL}/devops/app'
                    }
                }
            }
        }
        stage('Deploy application on k3s'){
            steps{
                sh '/usr/local/bin/kubectl apply -f ./k3s/redis-server.yaml'
                sh '/usr/local/bin/kubectl apply -f ./k3s/redis-app.yaml'
            }
        }
    }
}
